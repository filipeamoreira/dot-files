;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-envvar-name-history helm-apropos-history xref--read-pattern-history imenu--history-list ledger-minibuffer-history dired-shell-command-history pdf-annot-color-history helm-surfraw-input-history bookmark-history bibtex-completion-cite-command-history magit-read-file-hist org-read-date-history coding-system-history TeX-macro-history reftex-cite-regexp-hist regexp-search-ring helm-file-name-history grep-history tex-compile-history tmm--history org-tags-history compile-history cider-minibuffer-history xref--read-identifier-history set-variable-value-history read-expression-history markdown-gfm-language-history query-replace-history query-replace-from-to-history helm-ag--helm-history helm-ag--command-history magit-revision-history face-name-history regexp-history ido-buffer-history ido-file-history buffer-name-history helm-M-x-input-history file-name-history minibuffer-history extended-command-history))
(setq read-envvar-name-history '("TERM"))
(setq helm-apropos-history '("progn"))
(setq ledger-minibuffer-history '("2018/09/28" "2018/09/25" "2018/09/19" "2018/09/24" "2018/09/22" "2018/09/23" "2018/09/19" "2018/09/17" "2018/09/18" "2018/09/19" "2018/09/117" "2018/09/15" "2018/09/07" "2018/09/14" "2018/09/12" "2018/09/10" "2018/09/07" "2018/09/11" "2018/09/07" "2018/09/14" "2018/09/09" "2018/09/07" "2018/09/04" "2018/09/05" "2018/09/06" "2018/09/05" "2018/09/04" "2018/09/02" "2018/09/03" "2018/09/04" "2018/08/31" "2018/08/30" "2018/08/29" "2018/08/28" "Assets:Credit" "2018/08/28"))
(setq bookmark-history '("dissertation"))
(setq bibtex-completion-cite-command-history '("cite" "17-21" "cite" "pcite" "cite"))
(setq coding-system-history '("utf-8"))
(setq reftex-cite-regexp-hist '("bau" "ba" "richard" "bau" "bauch" "yaron" "pressler" "douglas" "haber" "ruane" "dyck" "guent" "armenteros" "guent" "anchor" "sacred" "douglas" "brenner" "dougla" "douglas" "athal" "pressler" "klawans" "hal" "wenham" "klawan" "klawa" "douglas" "douglass" "feinst" "feint" "walton" "feinste" "walton" "klawans" "klawan" "klawans" "gkc" "feinste" "davidson" "feinste" "klaw" "kle" "klawa" "klew" "klawans" "klawa" "klawans" "feinst" "pressl" "pressle" "blenkin" "pressler" "press" "fryme" "frym" "ty" "block" "duane" "christesen" "duane" "tigay" "harman" "bdb" "dbd" "instone" "davidson" "bdag" "tigay" "keil" "driver" "murray" "merril" "davidson" "driver" "halot" "brown" "craigie" "bdb" "warren" "ville" "merril" "murr" "murray" "mounce" "laney" "kaufman" "keil" "kerl" "davidson"))
(setq regexp-search-ring '(#("magit" 0 5 (isearch-case-fold-search t)) #("when the events" 0 15 (isearch-case-fold-search t)) #("markets" 0 7 (isearch-case-fold-search t)) #("when the market" 0 15 (isearch-case-fold-search t)) #("creates an advert with events" 0 29 (isearch-case-fold-search t)) #("helm" 0 4 (isearch-case-fold-search t)) #("magi" 0 4 (isearch-case-fold-search t)) #("gem" 0 3 (isearch-case-fold-search t)) #("editor" 0 6 (isearch-case-fold-search t)) #("emacs" 0 5 (isearch-case-fold-search t)) #("modules" 0 7 (isearch-case-fold-search t)) #("ido" 0 3 (isearch-case-fold-search t)) #("con" 0 3 (isearch-case-fold-search t)) #("rele" 0 4 (isearch-case-fold-search t)) #("isbn" 0 4 (isearch-case-fold-search t)) #("stable" 0 6 (isearch-case-fold-search t))))
(setq helm-file-name-history '("custom-theme-load-path" "proposal.tex" "analysis.tex" "exegesis.tex" "object_normaliser.rb" "oj.rb" "initializers" "config" "oj.rb" "git-rebase-todo" "git-rebase-todo" "boosted_bets_controller_spec.rb" "apollo" "betslip_data_factory.rb" "git-rebase-todo" "." "marriage-texts" "git-rebase-todo" "form_submission_recipient_factory.rb" "kaminari.rb" "git-rebase-todo" "git-rebase-todo" "boosted_bets_grids_controller_spec.rb" "boosted_bets" "admin" "controllers" "git-rebase-todo" "git-rebase-todo" "form_submission_recicpient_factory.rb" "form_submission_factory.rb" "submission.rb" "data_factory.rb" "factories" "data_spec.rb" "git-rebase-todo" "base_form_factory.rb" "factories" "base_form_spec.rb" "git-rebase-todo" "git-rebase-todo" "remove_api_helpers.rb" "support" "git-rebase-todo" "git-rebase-todo" "git-rebase-todo" "git-rebase-todo" "grid.js" "study-skills.org" "grid.js.erb" "global2.yml
" "returns_12800_0_as_potential_earnings.yml" "returns_400_as_potential_earnings.yml" "returns_415_0_as_potential_earnings.yml" "git-rebase-todo" "git-rebase-todo" "git-rebase-todo" "git-rebase-todo" "TODO" "returns_true.yml" "returns_true.yml" "returns_false.yml" "returns_false.yml" "returns_false.yml" "git-rebase-todo" "marriage-texts.org" "marriage-texts" "git-rebase-todo" "highlights" "git-rebase-todo" "apollo_tag_and_push" "pt" "git-rebase-todo" "tools" "compiler.jar" "tools" "compiler.jar" "tools" "compiler.jar_original" "git-rebase-todo" "apollo.multiplex_ui.spec.js" "git-rebase-todo" "psych_monkey_patch.rb" "event.rb" "git-rebase-todo" ".coverage.yml" ".rubocop.yml" ".rubocop.yml" "git-rebase-todo" "tools" "git-rebase-todo" "abstract_mysql2_adapter.rb" "agenda.html.erb_spec.rb" "calendars" "views" "git-rebase-todo" "git-rebase-todo" "TODO" "head.html.erb_spec.rb" "_head.html.erb_spec.rb" "test_helper.html.erb_spec.rb"))
(setq tmm--history '("h==>Help" "c==>Commit" "y==>YASnippet" "T==>Text" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "c==>Commit" "y==>YASnippet" "T==>Text" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "c==>Commit" "y==>YASnippet" "T==>Text" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File" "h==>Help" "c==>Commit" "y==>YASnippet" "T==>Text" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq org-tags-history '("wilson" ":wilson:"))
(setq cider-minibuffer-history '("(find-doc)" "find-doc" "doc" "(< 0 1)" "1" "0" "b" "a"))
(setq set-variable-value-history '("2" "t" "2" "nil" "2"))
(setq markdown-gfm-language-history '("ruby"))
(setq query-replace-history '("2015" "8082" "" ".freeze" "#" "\\#" "-" "\\-" "_" "\\_" "#" "\\#" "=>" "=\\>" "_" "\\_" "" ".freeze" "`" "<code>" "`" #("</code>" 0 2 (face markdown-html-tag-delimiter-face) 2 6 (face markdown-html-tag-name-face) 6 7 (rear-nonsticky t face markdown-html-tag-delimiter-face)) "`" #("<code>" 0 1 (face markdown-html-tag-delimiter-face) 1 5 (face markdown-html-tag-name-face) 5 6 (rear-nonsticky t face markdown-html-tag-delimiter-face)) "" ".freeze" "__" "*" "https://fdj-165-int.lvs.co.uk:8443" #("https://localhost:3443" 0 21 (face (whitespace-line font-lock-string-face minibuffer-prompt minibuffer-prompt)) 21 22 (face (whitespace-line font-lock-string-face minibuffer-prompt minibuffer-prompt) rear-nonsticky t)) "https://widgets.lvs.co.uk" "http://localhost:2015" "" ".freeze" "" ".freeze" "" "\\.freeze" "http" "https" "localhost:2015/" "widgets.lvs.co.uk/" "widgets.docker" "drupal.docker" "http://drupal.docker.localhost:2015" #("https://widgets.lvs.co.uk" 0 24 (face (whitespace-line font-lock-string-face minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt)) 24 25 (rear-nonsticky t face (whitespace-line font-lock-string-face minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt minibuffer-prompt))) "widgets" "drwidgetspal" "drupal.docker" "widgets.docker" "http://widgets.docker.localhost:2015" #("https://widgets.lvs.co.uk" 0 24 (face font-lock-string-face) 24 25 (face font-lock-string-face rear-nonsticky t)) "permanent" "temporary" "__" "*" "" ".freeze" "" "freeze" "" ".freeze" "v1" "v3" "always_valid_link" "never_expiring_link" "v1" "v3" "v1" "v3" "v1" "v3" "" ".json" "" "/en" "v1" "v3" "en-GB" "he-IL" ";" "," "" "Masagi." "" "Masagi" "/mify/" "/m/" "multi-cms" "cms" "COMPOSE_PROJECT_NAME" "APP_NAME" "asset_path" "asset-url" "asset_url" "asset-url" "grid2" "grid1" "asset-url(" "url("))
(setq helm-ag--helm-history '(#("core" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("savefile" 0 8 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("create_connection" 0 17 (font-lock-face nil fontified t)) #("lib" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("ISBB_ABP_AUTH_HS_TOKEN_MASTER" 0 29 (font-lock-face font-lock-string-face fontified t)) #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("Gemfile" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("abp-log-metricbeat" 0 18 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("abp-app-widgets" 0 15 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("abp-app-drupal" 0 14 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("Dockerfile" 0 10 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("spec" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("app" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("highlights" 0 10 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("app" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("app" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("apollo_advert" 0 13 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("dist" 0 4 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("apollo-releaser" 0 15 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("apollo-releaser" 0 15 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("in_play" 0 7 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("account" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("api" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("app" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("apollo" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("events" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("app" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("LICENSE" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("guto" 0 4 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("package" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("block_content" 0 13 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("chat" 0 4 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("chat" 0 4 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("login" 0 5 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("bundle_config" 0 13 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("lib" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("cash_out" 0 8 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("validation" 0 10 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("src" 0 1 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory) 1 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("activity-open-bets" 0 18 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) "core" #("add_development_dependency" 0 26 (font-lock-face nil fontified t)) #("lib" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("betslip_async" 0 13 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("navigation" 0 10 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("app" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("communications" 0 14 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("navigation" 0 10 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("settled_bets" 0 12 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("login" 0 5 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("src" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("login" 0 5 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("market_display" 0 14 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("__mocks__" 0 9 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("package" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("web" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("common" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("communications" 0 14 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("api" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("src" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("payment" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("app" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("payment" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("api" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("apollo_home" 0 11 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("guto" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("lib" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("apollo" 0 6 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("highlights" 0 10 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("spec" 0 4 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("app" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("routes" 0 6 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("config" 0 6 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("common" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("DateFilter" 0 10 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("components" 0 10 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("betslipBasicDetails" 0 19 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("README" 0 6 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("betslip" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("apollo-releaser" 0 15 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("apollo_advert-3" 0 15 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("api" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("lib" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("communications" 0 14 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("generic_pages_factory" 0 21 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) #("media_channel_factory" 0 21 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("legal_information" 0 17 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("spec" 0 4 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("_competition" 0 12 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("app" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("Gemfile" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("apollo-releaser" 0 15 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("app" 0 3 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("guto-latex" 0 2 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight) 2 10 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight))))
(setq helm-ag--command-history '("magit" "xavier" "def except" "toggle_admin_advert_path" "Xavier" "add_cells_view_path" "savefile" "org-clock-save" "whitespace-cleanup" "delete-trailing-whitespace" "Apollo::RestApi::Base.establish_connection" "Apollo::RestApi::establish_connection" "include ::Apollo::RestApi::Request" "connection" "get_connection" "create_connection" "base_url" "use_master_hs_token" "auth_hs_token_master" "ISBB_ABP_AUTH_HS_TOKEN_MASTER" "TOKEN" "TOKEN_ANONYMOUS" "external_link_opens_new_page" "mobile_image_resolution_sizes" "styles" "abp-app-widgets-kiosk_build" "WIDGETS_DB_SEED_HOME" "SQL is not read" "mainbook_event_path" "def mainbook_event_path" "display_period_filter_enabled" "media_channel_filter_enabled" "singleton_graphic_highlight" "highlight" "def save_order" "save_order" "xavier" "\\:with_thumbnail" ":with_thumbnail" "graphic_blocks" "save_order" "media_channel_filter_enabled" "feature" "highlights" ":setting" "restricted" "restricted_administrator" ":restricted_administrator" "restricted_administrator" "File.join" "with_attachment" "xavier" "Xavier" "set admin sse handler" "events.js" "events" "chunkhash" "date" "8080" "with_attachment" "with_thumbnail" ":with_thumbnail" "rugged" "RemoveMobileRecaptchaSetting" "CreateCommunicationTypeDisplayTable" "CreateInPlayWidgets2" "CreatePromotionImages" "CreateInlineVideos" "CreateHelpItems" "DefaultGenericPagesAndMenu" "@@available_languages" "show_cookie_size_in_logs" "market_type-content" "mainbook_markets" "market_type-title" "win-draw-win" "wind-draw-win" "columns_3" "releaser" "APOLLO_HOME" "version" "traefik" "zpresent" "@swagger" "http://localhost:2015" "except" "except\\!" "except!" "except" "except!" "except" "render text" "BalanceController" "def translate" "export" "CLEAN" "CLAN" "CLAN " "bundle_config" "\\.then"))
(setq magit-revision-history '("bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp55299-ruby-upgrade" "bugfix/abp55299-ruby-upgrade" "origin/master" "master" "bugfix/abp55299-ruby-upgrade" "origin/bugfix/abp-55299-fix-missing-readme" "bugfix/abp-55299-fix-missing-readme" "origin/master" "master" "v5.1.5" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp55299-ruby-upgrade" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "tmpbranch-a6fc0ce" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "v3.0.1" "v9.3.0" "v8.0.1" "v3.0.1" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp-55299-fix-missing-readme" "bugfix/abp-55299-fix-missing-readme" "master" "bugfix/abp-55299-fix-missing-readme-file" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp-55299-ruby-upgrade" "origin/bugfix/abp55299-ruby-upgrade" "origin/bugfix/abp-55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "origin/master" "master" "bugfix/abp-55299-ruby-upgrade" "tmpbranch-d998011" "bugfix/abp-55299-ruby-upgrade" "v1.9.1" "origin/bugfix/fix-node-sass-error" "origin/master" "feature/add-kiosk-widgets" "bugfix/abp-55299-ruby-upgrade" "bugfix/abp55299-ruby-upgrade" "bugfix/abp-55299-ruby-upgrade" "tmpbranch-d8920bf" "bugfix/abp-55299-ruby-upgrade" "master" "origin/master" "master" "feature/add-kiosk-widgets" "origin/feature/add-kiosk-widgets" "origin/feature/kiosk" "6" "origin/feature/add-kiosk-widgets" "feature/add-kiosk-widgets" "master" "origin/master" "origin/bugfix/dem-30-fix-keep-alive" "bugfix/dem-30-fix-keep-alive" "origin/master" "master" "feature/kiosk" "feature/add-kiosk-widgets" "master" "origin/master" "origin/feature/kiosk" "origin/master" "origin/bugfix/dem-30-fix-keep-alive" "bugfix/dem-30-fix-keep-alive" "origin/master" "master" "origin/bugfix/dem-30-fix-keep-alive" "bugfix/dem-30-fix-keep-alive" "bugfix/abp-dem-30-fix-keep-alive" "origin/bugfix/dem-30-fix-keep-alive" "bugfix/dem-30-fix-keep-alive" "master"))
(setq face-name-history '("hi-pink" "hi-yellow" "hi-red-b" "hi-yellow" "hi-green" "hi-pink" "hi-yellow"))
(setq regexp-history '("breadcrumb.rb" "No such file or directory" "exception" "%%" "freeBet" "promo_id" "#27A822" "address" "Service" "Code" "code"))
(setq ido-buffer-history '("git-rebase-todo" "magit: advert" #("chapter-1.tex" 0 13 (face ido-virtual)) "git-rebase-todo" "apollo_advert.gemspec" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "magit: highlights" "Gemfile" "git-rebase-todo" "Gemfile" "market" "git-rebase-todo" "Gemfile" "magit: advert" "git-rebase-todo" "Gemfile" "advert_cell_spec.rb" "magit: advert" "Gemfile" "magit: admin" "git-rebase-todo" "magit: isbb" "Gemfile" "guto.el" "*Messages*" "highlights/news_controller_2.rb" "*Messages*" nil "news_controller_2.rb" "magit: isbb" "magit: advert" ".bundle" "magit: isbb" "Gemfile" "fdj-cms/spec_helper.rb" "isbb" "advert_cell.rb" "advert_cell_spec.rb" "lvs.org" "magit: advert" "Disk Image" "accounts.org" #("chapter-1.tex" 0 13 (face ido-virtual)) "packrefs.ts" "app-info" "widgets-hook-test/.git" "lvs.org" "advert_cell_spec.rb" "engine_base_initializers.rb" "Gemfile" "base_cell_spec.rb" "advert_cell_spec.rb" #("Gemfile" 0 7 (face ido-virtual)) "gems" "lvs.org" "preload" "*Packages*" "guto.el" "gems" "lvs.org" "guto.el" "magit: isbb" "*ansi-term*" "lvs.org" "index.html" "guto.el" "*scratch*" "lvs.org" "magit: isbb" "guto.el" #("chapter-1.tex" 0 13 (face ido-virtual)) #("guto.el" 0 7 (face ido-virtual)) "savefile" #("CompactPropositionMarket.jsx" 0 28 (face ido-virtual)) #("prelude-editor.el" 0 17 (face ido-virtual)) "preload.el" #("guto.el" 0 7 (face ido-virtual)) #("prelude-editor.el" 0 17 (face ido-virtual)) "CompactPropositionMarket.jsx" #("guto.el" 0 7 (face ido-virtual)) #("CompactPropositionMarket.jsx" 0 28 (face ido-virtual)) "guto.el" "*Messages*" "guto.el" "*Warnings*" "guto.el" "persistence" "magit: communications" #("20141105101122_rename_message_type_as_activation_trigger.rb" 0 59 (face ido-virtual)) "magit: prelude" "magit: widgets" "widgets"))
(setq ido-file-history '("." nil "." nil "." nil "." nil "." "gem" "." nil "." nil "." nil "." nil "." nil "." nil "." nil "." "zsh" "." nil "." "la" "." nil "." nil "." "gem" "." nil "." "high" "." nil "." "con" "." nil "." nil "." nil "." nil "." nil "." nil "." nil "." "]" "." nil "." nil "." nil "es" nil "." nil "." nil "." nil "." nil "." "wo" "." nil "." nil "." nil "." nil "." nil "." nil "." nil "." nil "." "dri" "." nil "." nil))
(setq buffer-name-history '("git-rebase-todo" "magit: advert" "git-rebase-todo" "apollo_advert.gemspec" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "Gemfile" "git-rebase-todo" "magit: highlights" "Gemfile" "git-rebase-todo" "Gemfile" "market" "git-rebase-todo" "Gemfile" "magit: advert" "git-rebase-todo" "Gemfile" "advert_cell_spec.rb" "magit: advert" "Gemfile" "magit: admin" "git-rebase-todo" "magit: isbb" "Gemfile" "guto.el" "*Messages*" "highlights/news_controller_2.rb" "*Messages*" "news_controller_2.rb" "magit: isbb" "magit: advert" ".bundle" "magit: isbb" "Gemfile" "fdj-cms/spec_helper.rb" "isbb" "advert_cell.rb" "advert_cell_spec.rb" "lvs.org" "magit: advert" "Disk Image" "accounts.org" "packrefs.ts" "app-info" "widgets-hook-test/.git" "lvs.org" "advert_cell_spec.rb" "engine_base_initializers.rb" "Gemfile" "base_cell_spec.rb" "advert_cell_spec.rb" "Gemfile" "gems" "lvs.org" "preload" "*Packages*" "guto.el" "gems" "lvs.org" "guto.el" "magit: isbb" "*ansi-term*" "lvs.org" "index.html" "guto.el" "*scratch*" "lvs.org" "magit: isbb" "guto.el" "savefile" "CompactPropositionMarket.jsx" "preload.el" "CompactPropositionMarket.jsx" "guto.el" "*Messages*" "guto.el" "*Warnings*" "guto.el" "persistence" "magit: communications" "magit: prelude" "magit: widgets" "widgets" "CompetitionWidget.jsx" "competition/components" "dog_racing/components" "in_play/components" "magit: docker-abp" "dog_racing/components" "magit: widgets" "chapter-1.tex" "apollo/rest_api" "magit: isbb" "rest_api"))
(setq helm-M-x-input-history '("ido-di" "magit" "geten" "env" "hel" "color" "undo" "rename" "helm-find" "sort" "packa" "guto" "mode" "ispe" "pa" "pac" #("expert" 0 6 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("Gemfile" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) "magit" #("core" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("spec" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) #("core" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) "helm" "guto" "ispe" "mode" "open lin" "ruby-mode" "html" "hel" "version" "packa" "version" "packa" "org-mode" "guto" "auto" #("savefile" 0 8 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("modules" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) "ido" "packa" #("guto" 0 4 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("core" 0 4 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("::Apollo::RestApi::Request" 0 2 (font-lock-face enh-ruby-op-face fontified t) 2 8 (font-lock-face font-lock-type-face fontified t) 8 10 (font-lock-face enh-ruby-op-face fontified t) 10 17 (font-lock-face font-lock-type-face fontified t) 17 19 (font-lock-face enh-ruby-op-face fontified t) 19 26 (font-lock-face font-lock-type-face fontified t)) #("def" 0 1 (font-lock-face font-lock-keyword-face indent b fontified t) 1 3 (font-lock-face font-lock-keyword-face fontified t)) #("create_connection" 0 17 (font-lock-face nil fontified t)) #("lib" 0 3 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("help" 0 4 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("ISBB_ABP_AUTH_HS_TOKEN_MASTER" 0 29 (font-lock-face font-lock-string-face fontified t)) #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("spec" 0 4 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "hel" "ispe" "guto" "ispe" "guto" "packa" "neo" "doc" "doc-" "helm" "ispe" "mo" "packa" "mo" "ispe" "guto" "ispe" "guto" "ispe" #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("update_attributes" 0 17 (fontified t font-lock-face nil)) "magit" #("Gemfile" 0 7 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "hel" #("config" 0 6 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "ispe" "mode" "hel" "mode" "repl" "ispe" "guto" "auto" #("abp-log-metricbeat" 0 18 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("abp-app-widgets" 0 15 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("abp-app-drupal" 0 14 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) "blame" #("Dockerfile" 0 10 (fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "packa" #("spec" 0 4 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) #("app" 0 3 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) "ispe" "auto" #("highlights" 0 10 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" face dired-directory fontified t)) "ispe" #("highlights" 0 10 (fontified t face dired-directory help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "calc"))
(setq file-name-history '("~/work/freelance/lvs/apollo_home/isbb/spec/app/controllers/admin/highlights/news_controller_spec.rb" "~/work/freelance/lvs/apollo_home/gems/highlights/spec/app/controllers/admin/highlights/news_controller_spec.rb" "~/work/freelance/lvs/apollo_home/gems/highlights/spec/spec_helper.rb" "~/work/freelance/lvs/apollo_home/isbb/spec/spec_helper.rb" "~/.emacs.d/personal/" "~/.emacs.d/personal/guto-helm.el" "~/.emacs.d/personal/guto.el" "~/work/freelance/lvs/apollo_home/gems/market/app/views/admin/market/market_type_descriptions/_form.html.erb" "~/work/" #("~/work/freelance/lvs/apollo_home/isbb/config/initializers/cells-3-rails-5-compatibility.rb" 1 2 (match-part "/Users/guto/work/freelance/lvs/apollo_home/isbb/config/initializers/cells-3-rails-5-compatibility.rb") 2 90 (match-part "/Users/guto/work/freelance/lvs/apollo_home/isbb/config/initializers/cells-3-rails-5-compatibility.rb")) "~/work/freelance/lvs/apollo_home/isbb/.bundle/gems/actionpack-5.0.7/lib/action_controller/test_case.rb" "/Users/guto/work/freelance/lvs/apollo_home/isbb/test" "~/.zshenv" "~/.zshrc" "~/work/" "~/" "~/.emacs.d/" "~/work/freelance/lvs/apollo_home/isbb/.bundle/gems/actionpack-5.0.7/lib/action_pack/version.rb" "~/work/freelance/lvs/apollo_home/isbb/.bundle/" "~/work/freelance/lvs/apollo_home/isbb/" "~/work/freelance/lvs/apollo_home/isbb/.ruby-version" "~/work/coderelax/" "~/work/tmp/" "~/.emacs.d/personal/" "~/.emacs.d/personal/guto-prelude-pinned-packages.el" "~/.emacs.d/personal/guto-prelude-modules.el" "~/.emacs.d/personal/" "~/.emacs.d/" "~/.emacs.d/modules/" "~/" "" "~/" "/Users/guto/work/freelance/lvs/apollo_home/gems/advert/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/communications/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/expert/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/promotions/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/inline_video/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/highlights/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/market/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/advert/.git/rebase-merge/git-rebase-todo" "/Users/guto/work/freelance/lvs/apollo_home/gems/admin/.git/rebase-merge/git-rebase-todo" "~/work/freelance/lvs/apollo_home/isbb/app/controllers/admin/highlights/news_controller_2.rb" "~/work/freelance/lvs/apollo_home/tmp/682-original/" "~/work/freelance/lvs/apollo_home/tmp/682/.git/" "~/work/freelance/lvs/apollo_home/gems/advert/app/cells/apollo/advert/advert/show.erb" "~/work/freelance/lvs/apollo_home/gems/advert/spec/cells/apollo/advert/base_cell_spec.rb" "~/work/freelance/lvs/apollo_home/gems/advert/app/cells/apollo/advert/base_cell.rb" "~/.emacs.d/personal/persistence/ido.last" "~/.emacs.d/personal/persistence/" "~/work/freelance/lvs/apollo_home/isbb/spec/app/controllers/admin/highlights/" "~/work/freelance/lvs/apollo_home/isbb/spec/app/controllers/admin/highlights" "~/work/freelance/lvs/apollo_home/isbb/spec/app/controllers/admin" "~/work/freelance/lvs/apollo_home/isbb/spec/app/controllers" "~/work/freelance/lvs/apollo_home/isbb/spec/app" "~/work/freelance/lvs/apollo_home/isbb/config/initializers/project_overwriting.rb" "~/work/freelance/lvs/apollo_home/isbb/spec/controllers/admin/highlights/news_controller_spec.rb" "~/work/freelance/lvs/apollo_home/isbb/spec/controllers/admin/highlights" "~/work/freelance/lvs/apollo_home/isbb/spec/controllers/admin" "~/work/freelance/lvs/apollo_home/docker-abp" "~/work/freelance/lvs/apollo_home/isbb/spec/controllers/apollo/highlights/news_controller_spec.rb" "~/work/freelance/lvs/apollo_home/isbb/spec/controllers/apollo/highlights" "~/work/freelance/lvs/apollo_home/widgetsweb-drupal/.gitignore" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-db-widgets-kiosk-seed" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-db-widgets-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-drupal-kiosk/drupal/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-drupal-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-nginx-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk/widgets_src/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/docker-compose-app-widgets-kiosk.yml" "~/work/freelance/lvs/apollo_home/multi-tenant" "~/work/freelance/lvs/apollo_home/multi-tenant-original/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-nginx-kisok" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk/widgets_src/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk/" "~/work/freelance/lvs/apollo_home/widgets_src" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www/static/.keep" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www/drupal/.keep" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www/static" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www/drupal" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-drupal-kiosk/drupal-2/" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-drupal-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk/widgets_src" "~/work/freelance/lvs/apollo_home/multi-tenant/docker-compose-app-widgets-kiosk.yml" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-db-widgets-kiosk-seed" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-db-widgets-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-db-widgets-kiosk-seed" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk-www" "~/work/freelance/lvs/apollo_home/multi-tenant/abp-app-widgets-kiosk" "/Users/guto/work/freelance/lvs/apollo_home/widgets/.git/rebase-merge/git-rebase-todo" "~/work/freelance/lvs/apollo_home/isbb/.ruby-version" "/Users/guto/work/freelance/lvs/apollo_home/gems/highlights/.git/rebase-merge/git-rebase-todo" "~/Dropbox/church/adventurers/2019-2019-adventurers-newbold.org" "~/Dropbox/church/adventurers"))
(setq minibuffer-history '("guto" "magit-log-section" "magit-refresh" "gu" "magit-commit-show-diff" "*ansi-term-1*" "gt" "magit-commit-sho" "magit-diff-h" "news" "cons" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/fixtures/cassettes/Admin_Highlights_NewsController/POST_create/when_the_events_are_posted/creates_an_advert_with_events.yml" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/fixtures/cassettes/Admin_Highlights_NewsController/POST_create/when_the_events_are_posted" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/fixtures/cassettes/Admin_Highlights_NewsController/_update/when_the_events_are_posted/updates_the_news_with_the_event.yml" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/fixtures/cassettes/Admin_Highlights_NewsController/_update/when_the_events_are_posted" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/fixtures/cassettes/Admin_Highlights_NewsController/_update/" "/Users/guto/work/freelance/lvs/apollo_home/isbb/" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/app/controllers/admin/highlights/n" "/Users/guto/work/freelance/lvs/apollo_home/gems/highlights/spec/app/controllers/admin/highlights/n"
;;;  #("ccf2c08" 0 7 (face magit-hash magit-section #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#3 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "ccf2c08" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#4 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) unpushed "@{upstream}.." #<marker (moves after insertion) at 1183 in magit: highlights> #<marker at 1 in magit: highlights> #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#5 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) status nil #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil nil nil (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) branch "master" #<marker (moves after insertion) at 1183 in magit: highlights> #<marker (moves after insertion) at 1183 in magit: highlights> #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-headers-hook magit-insert-head-branch-header) (magit-status-sections-hook magit-insert-status-headers)) #4 (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) branch #("origin/master" 0 13 (face magit-branch-remote)) #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-headers-hook magit-insert-upstream-branch-header) (magit-status-sections-hook magit-insert-status-headers)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) tag "v5.1.5" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-headers-hook magit-insert-tags-header) (magit-status-sections-hook magit-insert-status-headers)) #6 nil))) #3)) (#2 #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "07f59c4" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "eb89be8" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "22f6163" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "b776d8e" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "8c53394" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "e15e84b" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "47d7352" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "b6a5770" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "61e1d61" #<marker (moves after insertion) at 1183 in magit: highlights> nil #<marker at 1 in magit: highlights> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #3 nil))) nil) keymap (keymap (97 . magit-cherry-apply) (remap keymap (magit-visit-thing . magit-show-commit)))))
 "/Users/guto/work/freelance/lvs/apollo_home/gems/highlights/spec/s" "/Users/guto/work/freelance/lvs/apollo_home/gems/highlights/" "/Users/guto/work/freelance/lvs/apollo_home/isbb/spec/s" "isb" "/Users/guto/.emacs.d/personal/" "guto" "/Users/guto/.emacs.d/personal/he" "/Users/guto/.emacs.d/personal/g" "_form.html.erb" "/Users/guto/work/freelance/lvs/apollo_home/gems/market/app/views/admin/market/market_type_descriptions/f" "/Users/guto/work/freelance/lvs/apollo_home/gems/market/" "/Users/guto/work/freelance/lvs/apollo_home/isbb/" "isbb" "/Users/guto/.emacs.d/personal/themes/color-theme-solarized/" "/Users/guto/.emacs.d/personal/" #("magit" 0 5 (fontified t)) "com" "/Users/guto/.emacs.d/personal/" "48" "/Users/guto/work/freelance/lvs/apollo_home/isbb/.bundle/gems/actionpack-5.0.7/lib/action_controller/t" "/Users/guto/work/freelance/lvs/apollo_home/isbb/" #("For" 0 3 (face font-lock-doc-face fontified t)) "2" "/Users/guto/work/freelance/lvs/apollo_home/fdj-cms/" "/Users/guto/" "/Users/guto/zsh" "/Users/guto/work/freelance/lvs/apollo_home/isbb/" "/Users/guto/zsh" "guto" "/Users/guto/.emacs.d/personal/hel" "/Users/guto/.emacs.d/personal/guto" "/Users/guto/.emacs.d/personal/hel" "mes" "/Users/guto/.emacs.d/personal/g" "/Users/guto/.emacs.d/personal/h" "/Users/guto/.emacs.d/personal/g" "/Users/guto/work/freelance/lvs/apollo_home/isbb/" "/Users/guto/.emacs.d/personal/g" "/Users/guto/work/freelance/lvs/apollo_home/isbb/.bundle/gems/actionpack-5.0.7/lib/action_pack/v" #("cache" 0 5 (face dired-directory fontified t help-echo "mouse-2: visit this file in other window" dired-filename t mouse-face highlight)) "guto" "magit" #("7" 0 1 (fontified t font-lock-face font-lock-string-face)) "ge" #("md" 0 2 (fontified t font-lock-face font-lock-string-face)) "gem" #("md" 0 2 (fontified t font-lock-face font-lock-string-face)) "gem" #("2" 0 1 (fontified t font-lock-face font-lock-string-face)) #("protocol" 0 8 (fontified t)) "guto" "guto.e" "guto." "magit is" "2 Samuel 20:16-17" "271-272" "271" "See" "bugfix/abp-55299-fix-missing-readme" "60" "44" "On bugfix/abp55299-ruby-upgrade: WIP" "js2-mode" "rake" "On bugfix/abp55299-ruby-upgrade: WIP: Cells 4 upgrade" "61" "45" "272" "See" "2 Samuel 20:19" "org-src-fontify-natively" "org-edit-src-auto-save-idle-delay" "2 Samuel 20:17" "prelude-savefile-dir" "prelude-clean-whitespace-on-save" "prelude-whitespace" "ido-save-directory-list-file" "org-clock-persist-file" "On master: WIP" "436"))
(setq extended-command-history '("ido-dired" "magit-blame" "getenv" "helm-ag" "undo" "helm-find-files" "sort-lines" "package-list-packages" "guto-insert-bibleref" "helm-bibtex-with-local-bibliography" "auto-fill-mode" "ispell-word" "package-install" "html-mode" "version" "package-autoremove" "emacs-version" "package-refresh-contents" "org-mode" "ido-mode" "neotree" "replace-string" "calc" "yaml-mode" "restclient-mode" "untabify" "ido-cr+-update-blacklist" "helm-configuration" "javascript-mode" "ruby-mode" "projectile-project-info" "helm-M-x" "clone-indirect-buffer" "savehist-mode" "helm-autoresize-mode" "helm-top" "eshell" "shell-pop" "org-table-export" "org-table-delete-column" "csv-mode" "reftex-toggle-plug-into-AUCTeX" "reftex-mode" "smartparens-mode" "capitalize-region" "show-paren-mode" "comment-region" "global-visual-line-mode" "visual-line-mode" "rectangle-number-lines" "rectangle-mark-mode" "helm-bibtex" "org-version" "latex-mode" "js-mode" "set-file-name-coding-system" "list-coding-systems" "org-store-link" "css-mode" "org-columns-remove-overlays" "global-flycheck-mode" "describe-variable" "uncomment-region" "highlight-regexp" "helm-find" "helm-locate" "load-theme" "magit-version" "flycheck-mode" "table-delete-column" "follow-mode" "ispell-change-dictionary" "wdired-change-to-wdired-mode" "indent-region" "set-variable" "upcase-word" "xml-mode" "editorconfig-mode" "tramp-cleanup-all-connections" "server-start" "start-kbd-macro" "eval-buffer"))
(setq search-ring '("description" "tools" "sus"))
(setq regexp-search-ring '(#("magit" 0 5 (isearch-case-fold-search t)) #("when the events" 0 15 (isearch-case-fold-search t)) #("markets" 0 7 (isearch-case-fold-search t)) #("when the market" 0 15 (isearch-case-fold-search t)) #("creates an advert with events" 0 29 (isearch-case-fold-search t)) #("helm" 0 4 (isearch-case-fold-search t)) #("magi" 0 4 (isearch-case-fold-search t)) #("gem" 0 3 (isearch-case-fold-search t)) #("editor" 0 6 (isearch-case-fold-search t)) #("emacs" 0 5 (isearch-case-fold-search t)) #("modules" 0 7 (isearch-case-fold-search t)) #("ido" 0 3 (isearch-case-fold-search t)) #("con" 0 3 (isearch-case-fold-search t)) #("rele" 0 4 (isearch-case-fold-search t)) #("isbn" 0 4 (isearch-case-fold-search t)) #("stable" 0 6 (isearch-case-fold-search t))))
