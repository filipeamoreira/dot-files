snippet fun "CoffeeScript Function" !i
${1:($2)}->
  $0
endsnippet

snippet expect "Jasmine Expect" i
expect($1).to$2($3)
endsnippet

snippet expecttb "Jasmine Expect - toBe" i
expect($1).toBe($2)
endsnippet

snippet ssa "Angular Spec - @$scope.$apply()" !b
@$scope.$apply()
endsnippet

snippet def "New method" b
$1: ${2:($3)}->
  $0
endsnippet

snippet defc "New class method" b
@$1: ${2:($3)}->
  $0
endsnippet

snippet apply "Angular Spec - @$scope.$apply()" !b
$scope.$apply()
endsnippet

snippet av "Angular Spec - Shared variable" i
@$$1
endsnippet

snippet ao "Angular object - Ex. $scope.$apply()" !b
$$1.$$2
endsnippet

snippet sao "Angular object - Ex. $scope.$apply()" !b
@$$1.$$2
endsnippet

snippet ngm "Angular Module" !b
angular.module('$1'${2:, [$3]})
endsnippet

snippet ngc "Angular Controller" !b
angular.module('$1').controller '$2',
($scope${3:, $4})->
endsnippet

snippet ngs "Angular Service" !b
angular.module('$1').factory '$2',
($scope${3:, $4})->
endsnippet

snippet pit "Pending it" !b
it "$1"
endsnippet

snippet it "it" !b
it "$1", ->
	$0
endsnippet

snippet desc "Describe" !b
describe "$1", ->
	$0
endsnippet

snippet ngdesc "Describe" !b
describe "$1", ->
	beforeEach module '$2'

	beforeEach inject ($3)->
endsnippet

#snippet fun "Coffeescript function" !i
#->
#endsnippet

#snippet funa "Coffeescript function" i
#($1)->
#endsnippet

snippet be "Before Each" !b
beforeEach ->
	
endsnippet

snippet bei "Before Each" !b
beforeEach inject ($1)->
	
endsnippet

snippet ngd "Angular Directive" !b
angular.module('$1').directive '$2', ->
	link: (scope, element, attrs)->
		$5
endsnippet

snippet log "Console.log" !i
console.log ${1:"${2:HERE}"}
endsnippet

snippet ngdd "Directive Spec" !b
describe "Directive: $1", ->
  beforeEach module '$2'

  beforeEach inject ($rootScope, $compile)->
    @scope = $rootScope.$new()
    @el    = angular.element """
    $3
    """
    $compile(@el)(@scope)
    @scope.$apply()

  it "$4", ->
   $0
endsnippet

snippet __ "Add spec variable" b
$1 = _$1_
endsnippet
